import random
import time
import sys
import pydash
from termcolor import cprint
from termcolor import colored

# List of Items found throughout the crawler
# mystery vial
# Sword
# regular clothes
# 

def delay_print(words):
    for l in words:
        sys.stdout.write(l)
        sys.stdout.flush()
        time.sleep(0.005)


def inputFromList(question, allowed_responses):
    
    delay_print(question)
    ans = input().lower()
    
    # Special case: `None` means allow anything
    if allowed_responses == None:
        return ans

    while ans not in allowed_responses:
        delay_print(f"You must say one of these: {allowed_responses}\n")
        ans = input().lower()
    
    return ans

def startoverAction(answer):
            delay_print("You awake in a dark room, You vaguely remember this place.\n")
            delay_print("You look around and see a pile of clothes, a chest, and a window.\n")
            state["health"] = 30
            state["armor"] = 8
            state["inventory"] = []
            state["location"] = "darkroom"
            state["prompt"] = "Do you check the pile of clothes, the chest, or the window "
            state["allowed_resps"] = ["pile of clothes", "chest", "window"]

def darkroomAction(answer):
    if answer == "pile of clothes":
        delay_print("You realise you are naked and don the clothes.\n")
        if "regular clothes" not in state["inventory"]:
            state["inventory"].append("regular clothes")
            cprint(f"Inventory:{state['inventory']}", "green")
            state["armor"] = state["armor"] + 1
            cprint(f"Armor:{state['armor']}", "cyan")
        state["prompt"] = "Now do you go to the window or check the chest? "
        state["allowed_resps"] = ["window","chest"]
    if answer == "window":
        delay_print("As you walk to the window, you see designs in the window, you also see a door that you didn't see before \n")
        state["location"] = "walkingroom"
        state["prompt"] = "Do you attempt to open the door or go to the window?\n"
        state["allowed_resps"] = ["go to the window","open the door"]
    if answer == "chest":
        delay_print("You find a mysterious vial with a red liquid in it.\n")
        state["location"] = "roomwithvial"
        state["prompt"] = "Do you drink the vial?"
        state["allowed_resps"] = ["yes","no"]

def darkroom2Action(answer):
    if answer == "explore":
        delay_print("You notice a second chest has appeared in the room, but everything else looks the same\n")
        state["location"] = "darkroom2"
        state["prompt"] = "What would you like to do?"
        state["allowed_resps"] = ["second chest", "chest", "pile of clothes", "window", "door"]
    if answer == "chest":
        delay_print("You walk over to the chest you find the vial in and find another vial\n")
        state["location"] = "roomwithvial"
        state["prompt"] = "Do you drink the vial?"
        state["allowed_resps"] = ["yes","no"]
    if answer == "second chest":
        delay_print("You are curious about this new chest and go over to it cautiously\n")
        delay_print("You open the chest and find a set of half chain armor\n")
        state["location"] = "darkroom2"
        state["promt"] = "Do you don the armor?\n"
        state["allowed_resps"] = ["put it on", "put it back"]
    if answer == "window":
        delay_print("You walk over to the window, noticing the designs have changed but still looks breakable\n")
        delay_print("You also see the door you escaped out last time\n")
        dieroll = random.randint(1,20)
        cprint(dieroll, "blue")
        if dieroll >= 18:
            delay_print("The window breaks and you fall out into an empty courtyard\n")
            delay_print("You look around and see a wagon, a gate, and a door back into the building you just fell out of \n")
            state["health"] = state["health"] - 10
            cprint(f"HP:{state['health']}", "red")
            state["location"] = "courtyard"
            state["prompt"] = "Do you check the wagon, go to the gate, or check the door "
            state["allowed_resps"] = ["wagon","gate","door"]
        else:
            state["location"] = "atwindow"
            state["prompt"] = "Do you try to break it or open the door?"
            state["allowed_resps"] = ["break it", "open door"]

def opendoorAction(answer):
    if answer == "go to the window":
        dieroll = random.randint(1,20)
        cprint(dieroll, "blue")
        if dieroll >= 18:
            delay_print("The window breaks and you fall out into an empty courtyard\n")
            delay_print("You look around and see a wagon, a gate, and a door back into the building you just fell out of \n")
            state["health"] = state["health"] - 10
            cprint(f"HP:{state['health']}", "red")
            state["location"] = "courtyard"
            state["prompt"] = "Do you check the wagon, go to the gate, or check the door "
            state["allowed_resps"] = ["wagon","gate","door"]
        else:
            delay_print("The window is cracked and looks like you can break it, but you don't see anything outside\n")
            state["location"] = "atwindow"
            state["prompt"] = "Do you try to break it or open the door?"
            state["allowed_resps"] = ["break it", "open door"]
    elif answer == "open the door":
        dieroll = random.randint(1,20)
        cprint(dieroll, "blue")
        if dieroll >= 14:
            delay_print("You have sucessfully opened the door!\n")
            delay_print("You step out of the room onto a landing with a staircase going up, and one going down \n")
            state["location"] = "landing"
            state["prompt"] = "Do you go up or down the stairs? "
            state["allowed_resps"] = ["up","down"]
        else:
            delay_print("The door is wedged but you feel it give a bit\n")

def landingAction(answer):
    if answer == "up":
        delay_print("you walk up the staircase to find a hallway that splits three ways\n")
        state["location"] = "triplehall"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["left", "right", "forward","back"]
    elif answer == "down":
        delay_print("You descend the staircase to find a room with three doors in it\n")
        state["location"] = "threedoor"
        state["prompt"] = "Which door do you choose to go into?\n"
        state["allowed_resps"] = ["first", "second", "third","back"]

def triplehallAction(answer):
    if answer == "left":
        delay_print("You turn left and start walking down the left hallway until you come up to another intersection\n")
        state["location"] = "losthall"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["left", "right", "forward","back"]
    elif answer == "forward":
        delay_print("You go forward for a ways until you see another intersection\n")
        state["location"] = "losthall"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["left", "right", "forward","back"]
    elif answer == "right":
        delay_print("You turn right and start walking down the right hallway until you come up to another intersection\n")
        state["location"] = "losthall"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["left", "right", "forward","back"]
    elif answer == "back":
        delay_print("You get an ominous feeling about this section of the building and turn back around and go back down the stairs to the landing\n")
        state["location"] = "landing"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["up","down"]

def losthallAction(answer):
    if answer == "left":
        delay_print("You turn left and start walking down the left hallway until you come up to another intersection\n")
        state["location"] = "losthall"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["left", "right", "forward","back"]
    elif answer == "forward":
        delay_print("You go forward for a ways until you see another intersection\n")
        state["location"] = "losthall"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["left", "right", "forward","back"]
    elif answer == "right":
        delay_print("You turn right and start walking down the right hallway until you come up to another intersection\n")
        state["location"] = "losthall"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["left", "right", "forward","back"]
    elif answer == "back":
        delay_print("You get an ominous feeling about this section of the building and turn back around\n")
        state["location"] = "triplehall"
        state["prompt"] = "Which way do you choose to go? "
        state["allowed_resps"] = ["left","right", "forward", "back"]

def threedoorAction(answer):
    if answer == "first":
        if "mystery vial" not in state["inventory"]:
            delay_print("You open the door and find an armored cultist that turns upon hearing the door open\n")
            delay_print("he shouts, 'Hey, How did you get out!' he draws his club and hits you over the head\n")
            delay_print("You see stars and your vision dims as you fall over from the blow\n")
            startoverAction(answer)
        else: 
            "mystery vial" in state["inventory"]
            delay_print("You open the door and find an armored cultist that turns upon hearing the door open\n")
            delay_print("You only have a vial in your pocket to defend yourself\n")
            state["location"] = "firstroom"
            state["prompt"] = "Do you throw the vial or attempt to grapple the cultist and overpower him"
            state["allowed_resps"] = ["throw it", "attempt to grapple"]
    elif answer == "second":
            delay_print("You open the second door to a dimly lit room and hear maniacal laughter\n")
            delay_print("You walk in and immiedately slip on a wet surface falling on your back\n")
            delay_print("As you open your eyes with stars in your vision you see a goblin above you with a rock\n")
            delay_print("He brings the rock down and your vision goes dark as you hear 'Gobby did good, capture hostage, Gobby gets treat'\n")
            startoverAction(answer)
    elif answer == "third":
        if "regular clothes" not in state["inventory"]:
            delay_print("You open the third door to see a lady who screams and immediately throws a small object that hits you in the temple\n")
            delay_print("Your vision starts to blur and the lady charges you striking you across the head, your vision goes dark as you crumple to the floor\n")
            startoverAction(answer)
        else:
            if "regular clothes" in state["inventory"]:
                delay_print("You open the third door to see a lady sitting in front of a vanity mirror brushing her hair\n")
                delay_print("'Well hello there, I see you managed to escape your room, would you like to help me with something?\n")
                state["location"] = "thirdroom"
                state["prompt"] = "Do you help the lady or no?\n"
                state["allowed_resps"] = ["yes", "no"]

def thirdroomAction(answer):
    if answer == "yes":
        delay_print("'Wonderful, I haven't had any visitors in awhile and really need help rearranging this room\n")
        delay_print("You see her stand up and start moving almost as if floating around the room telling you where to move things\n")
        dieroll = random.randint(1,20)
        cprint(dieroll, "blue")
        if dieroll >= 12:
            delay_print("You move the furniture around easily and she is beaming with happiness at her rearranged room\n")
            delay_print("'Here take this as a token of gratitude'")
            delay_print("She hands you a small object that as it comes in contact with your hand instantly transforms into small bracers with intricate designs\n")
            delay_print("When you look back to thank the lady she is gone\n")
            if "bracers" not in state["inventory"]:
                    state["inventory"].append("bracers")
                    cprint(f"Inventory:{state['inventory']}", "green")
                    state["armor"] = state["armor"] + 2
                    cprint(f"Armor:{state['armor']}", "cyan")
                    state["location"] = "emptyroom"
                    state["prompt"] = "What would you like to do next?\n"
                    state["allowed_resps"] = ["look around", "check the furniture", "back"] 
        else:
            delay_print("As you start to move things you accidently tip the vanity over shattering the mirror\n")
            delay_print("You hear a shriek that pierces your mind causing you to drop to one knee in pain as you cover your ears\n")
            state["health"] = state["health"] - 5
            cprint(f"HP:{state['health']}", "red")
            delay_print("The shriek clears almost as fast as it came, as you stand up and look around the lady is no where to be seen\n")
            state["location"] = "emptyroom"
            state["prompt"] = "What would you like to do next?\n"
            state["allowed_resps"] = ["look around", "check the furniture", "back"]
    if answer == "no":
        delay_print("'Oh that is a shame, Why would you barge into my room then not offer to help?\n")
        delay_print("As the last of her words leave her mouth you hear a high pitched shriek causing you to drop to your knees and cover your ears\n")
        state["health"] = state["health"] - 5
        cprint(f"HP:{state['health']}", "red")
        delay_print("When you stand up the lady is no where to be seen\n")
        state["location"] = "emptyroom"
        state["prompt"] = "What would you like to do next?\n"
        state["allowed_resps"] = ["look around", "check the furniture", "back"]




def firstroomAction(answer):
    if answer == "throw it":
        state["inventory"] = pydash.without(state["inventory"], "mystery vial")
        cprint(f"Inventory:{state['inventory']}", "green")
        dieroll = random.randint(1,20) + 3
        cprint(dieroll, "blue")
        if dieroll >= 15:
            delay_print("You hit the cultist in the face and the vial shatters causing him to fall unconcious\n")
            state["location"] = "emptyroom"
            state["prompt"] = "What do you want to do now?\n"
            state["allowed_resps"] = ["loot cultist","look around","back"]
        else:
            delay_print("The vial sails by the cultist because of your bad aim, and he laughs at you then charges\n")
            delay_print("You attempt to grapple him and take him out by hand\n")
            dieroll = random.randint(1,20) + 1
            cprint(dieroll, "blue")
            if dieroll >=12:
                delay_print("You catch him off guard as he charges you and manage to knock him out by tripping him\n")
                state["location"] = "emptyroom"
                state["prompt"] = "What would you like to do now?"
                state["allowed_resps"] = ["loot cultist","look around","back"]
            else:
                delay_print("The guard charging you catches you by surprise and you stumble backwards\n")
                delay_print("because you are off balance he is able to bring his club up and catch you in the temple\n")
                startoverAction(answer)
    if answer == "attempt to grapple":
        dieroll1 = random.randint(1,20)
        dieroll2 = random.randint(1,20)
        cprint(dieroll1, "blue")
        cprint(dieroll2, "blue")
        while dieroll1 == dieroll2:
            dieroll1 = random.randint(1,20)
            cprint(dieroll1, "blue")
            dieroll2 = random.randint(1,20)
            cprint(dieroll2, "blue")
        if dieroll1 > dieroll2:
            delay_print("You manage to subdue the cultist and knock him unconcious\n")
            state["location"] = "emptyroom"
            state["prompt"] = "What would you like to do now?"
            state["allowed_resps"] = ["loot cultist","look around","back"]
        if dieroll1 < dieroll2:
            delay_print(" The cultist charges you and easily overpowers you bringing his club down over your head")
            startoverAction(answer)
    if answer == "draw sword":
        dieroll = random.randint(1,20) + 2
        if dieroll > 14:
            delay_print("You manage to draw your sword and catch the cultist off guard, your blade slices across his neck as blood sprays out\n")
            state["location"] = "emptyroom"
            state["prompt"] = "What would you like to do now?"
            state["allowed_resps"] = ["loot cultist","look around","back"]
        else:
            delay_print("You didn't react fast enough and the cultist closes the distance quickly bringing his club up ready to fight\n")
            dieroll1 = random.randint(1,20) + 2
            dieroll2 = random.randint(1,20) + 3
            if dieroll1 < dieroll2:
                delay_print("You draw your sword using your hilt you catch him in the stomach then bring your sword down removing his head\n")
            if dieroll1 > dieroll2:
                delay_print("He brings his club up and connects with your shoulder\n")
                state["health"] = state["health"] - 5
                cprint(f"HP:{state['health']}", "red")
                delay_print("You bring your sword up and catch his stomach, slicing it open and causing the contents to spill on the ground\n")
                state["location"] = "emptyroom"
                state["prompt"] = "What would you like to do now?"
                state["allowed_resps"] = ["loot cultist","look around","back"]

def emptyroomAction(answer):
    if answer == "loot cultist":
        if "Sword" not in state["inventory"]:  
            state["inventory"].append("Sword")
            cprint(f"Inventory:{state['inventory']}", "green")
            delay_print("You find a small sword on the cultist that you can use, remember you can only wield one weapon and shield at a time\n")
    if answer == "look around":
        delay_print("You see a door leading to the second room, or a door going forward\n")
        state["location"] = "emptyroom"
        state["prompt"] = "What would you like to do?\n"
        state["allowed_resps"] = ["open the door in front", "go to second room"]
    if answer == "go to second room":
        if "Sword" not in state["inventory"]:
            delay_print("You open the second door to a dimly lit room and hear maniacal laughter\n")
            delay_print("You walk in and trip on a hidden wire hitting your head on the cobblestone floor\n")
            delay_print("As you open your eyes with stars in your vision you see a goblin above you with a rock\n")
            delay_print("He brings the rock down and your vision goes dark as you hear 'Gobby did good, capture hostage, Gobby gets treat'\n")
            startoverAction(answer)
        if "Sword" in state["inventory"]:
            delay_print("You open the second door to a dimly lit room and hear maniacal laughter\n")
            delay_print("You walk in and trip on a hidden wire hitting your head on the cobblestone floor\n")
            delay_print("As you open your eyes with stars in your vision you see a goblin above you with a rock\n")
            delay_print("Thinking quickly you draw the sword you just got and manage to bury it to the hilt just under the goblins chin.\n")
            delay_print("You stand up and pull the sword out of the goblin and clean the blood off resheathing it\n")
            state["location"] = "secondroom"
            state["prompt"] = "What would you like to do?\n"
            state["allowed_resps"] = ["look around", "loot goblin"]
    if answer == "open the door in front":
        delay_print("You open the door and get slightly blinded by a bright light\n")
        delay_print("As your eyes adjust you make out that you are in a courtyard, where you see a wagon, a gate leading outside, and a door on the building you just came out of\n")
        delay_print("You notice that the door you just came through is no longer there and you get a bad feeling that this place is not normal\n")
        state["location"] = "courtyard"
        state["prompt"] = "What would you like to do?\n"
        state["allowed_resps"] = ["wagon","gate","door"]
    if answer == "check the furniture":
        dieroll = random.randint(1,20)
        cprint(dieroll, "blue")
        if dieroll <=8:
            delay_print("You search the different pieces of furniture and find a few coins and valuables\n")
            if "gold pieces" not in state["inventory"]:
                state["inventory"].append("gold pieces")
                cprint(f"Inventory:{state['inventory']}", "green")
            delay_print("You look around and see a door going forward and a door going to the second room\n")
            state["location"] = "emptyroom"
            state["prompt"] = "What would you like to do?\n"
            state["allowed_resps"] = ["open the door in front", "go to second room"]
        else:
            delay_print("As you approach a piece of furniture, it transforms magically growing teeth and a tongue shoots out grabbing you and pulling you towards it\n")
            delay_print("You struggle as much as you can but to no avail, you are swallowed by this piece of furniture with teeth\n")
            startoverAction(answer)
    if answer == "back":
        delay_print("You head back out of the room you are in but feel a strange presence come over you\n")
        delay_print("You come back out to the room with three doors\n")
        state["location"] = "threedoor"
        state["prompt"] = "Which door do you choose to go into?\n "
        state["allowed_resps"] = ["first", "second", "third","back"]
    if answer == "hatch":
        delay_print("You go to the hatch and hear running water behind the doors, you also get a foul smell as you get closer\n")
        state["location"] = "hatch"
        state["prompt"] = "Do you open the hatch?"
        state["allowed_resps"] = ["yes", "no"]
    if answer == "first":
        if "mystery vial" or "sword" not in state["inventory"]:
            delay_print("You open the door and find an armored cultist that turns upon hearing the door open\n")
            delay_print("he shouts, 'Hey, How did you get out!' he draws his club and hits you over the head\n")
            delay_print("You see stars and your vision dims as you fall over from the blow\n")
            startoverAction(answer)
        if "mystery vial" in state["inventory"]:
            delay_print("You open the door and find an armored cultist that turns upon hearing the door open\n")
            delay_print("You are surprised to see the cultist has been revived but you react fast\n")
            state["location"] = "firstroom"
            state["prompt"] = "Do you throw the vial, or attempt to grapple him\n"
            state["allowed_resps"] = ["throw it", "attempt to grapple",]
        else:
            "sword" in state["inventory"]
            delay_print("You open the door and find an armored cultist that turns upon hearing the door open\n")
            delay_print("You are surprised to see the cultist has been revived but you react fast\n")
            state["location"] = "firstroom"
            state["prompt"] = "Do you draw your sword, or attempt to grapple him\n"
            state["allowed_resps"] = ["draw sword", "attempt to grapple"]

    elif answer == "second":
            delay_print("You open the second door to a dimly lit room and hear maniacal laughter\n")
            delay_print("You walk in and immiedately slip on a wet surface falling on your back\n")
            delay_print("As you open your eyes with stars in your vision you see a goblin above you with a rock\n")
            delay_print("He brings the rock down and your vision goes dark as you hear 'Gobby did good, capture hostage, Gobby gets treat'\n")
            startoverAction(answer)
    elif answer == "third":
        if "regular clothes" not in state["inventory"]:
            delay_print("You open the third door to see a lady who screams and immediately throws a small object that hits you in the temple\n")
            delay_print("Your vision starts to blur and the lady charges you striking you across the head, your vision goes dark as you crumple to the floor\n")
            startoverAction(answer)
        else:
            if "regular clothes" in state["inventory"]:
                delay_print("You open the third door to see a lady sitting in front of a vanity mirror brushing her hair\n")
                delay_print("'Well hello there, I see you managed to escape your room, would you like to help me with something?\n")
                state["location"] = "thirdroom"
                state["prompt"] = "Do you help the lady or no?\n"
                state["allowed_resps"] = ["yes", "no"]


def secondroomAction(answer):
    if answer == "look around":
        delay_print("You check your surroundings and see this must be a bedroom for a goblin, it has alot of bones strewn around and crude furniture\n")
        delay_print("You also see a hatch in the back of the room, as well as three doors that lead out to the other rooms you can enter\n")
        state["location"] = "emptyroom"
        state["prompt"] = "What would you like to do?\n"
        state["allowed_resps"] = ["Hatch", "back", "third", "first"]
    if answer == "loot goblin":
        delay_print("You look over the goblin and find a necklace with a ring\n")
        if "gold ring" not in state["inventory"]:
            state["inventory"].append("gold ring")
            print(f"Inventory:{state['inventory']}","green")
        delay_print("As you put the ring on you are flooded with images\n")
        delay_print("You start to remember that you are a Cleric with the Order of the Gauntlet\n")
        delay_print("You recover from the onslaught on images and look around\n")
        delay_print("You check your surroundings and see this must be a bedroom for a goblin, it has alot of bones strewn around and crude furniture\n")
        delay_print("You also see a hatch in the back of the room, as well as three doors that lead out to the other rooms you can enter\n")
        state["location"] = "emptyroom"
        state["prompt"] = "What would you like to do?\n"
        state["allowed_resps"] = ["hatch", "back", "third", "first"]
    

def hatchAction(answer):
    if answer == "yes":
        delay_print("You open the hatch in the back of the room to see a small river\n")
        delay_print("Seconds after you open the hatch you get hit with a foul smell\n")
        state["location"] = "hatch"
        state["prompt"] = "Do you go down through the hatch?\n"
        state["allowed_resps"] = ["yes","no"]

def courtyardAction(answer):
    if answer == "wagon":
        if "bracers" not in state["inventory"]:
            delay_print("As you start to move, you see movement on the walls surrounding the courtyard\n")
            delay_print("Suddenly the movement on the walls stop and hundreds of archers appear with their bows drawn taught aimed directly at you\n")
            delay_print("One of the archers, who you assume to be the captain, speaks out 'You shouldn't be here, you will pay for breaking the law'\n")
            delay_print("A single archer looses his arrow, you raise your hand to try and stop it, but suddenly it sprouts from your leg\n")
            delay_print("You feel your muscles quickly lock up and the world goes dark\n")
            startoverAction(answer)
        if "bracers" in state["inventory"]:
                delay_print("As you start to move, you see movement on the walls surrounding the courtyard\n")
                delay_print("Suddenly the movement on the walls stop and hundreds of archers appear with their bows drawn taught aimed directly at you\n")
                delay_print("One of the archers, who you assume to be the captain, speaks out 'You shouldn't be here, you will pay for breaking the law'\n")
                delay_print("A single archer looses his arrow, you raise your hand to try and stop it, Suddenly what looks like a blue curtain appears in front of you\n")
                delay_print("The arrow stops midair, caught by this new curtain.  The captain shouts the command to fire and you see hundreds of arrows appear stopped in a simliar manner to the first arrow\n")
                delay_print("The bracers start to glow a bright blue and suddenly all of the arrows are returned at high speed back to the archer that fired it and you hear the bodies thudding to the ground\n")
                delay_print("You feel worn out suddenly but drag yourself over to the wagon")
                state["location"] = "courtyard2"
                state["prompt"] = "What would you like to do now?"
                state["allowed_resps"] = ["Search wagon", "rest", "go to door", "go to gate"]
    if answer == "gate":
        if "bracers" not in state["inventory"]:
            delay_print("As you start to move, you see movement on the walls surrounding the courtyard\n")
            delay_print("Suddenly the movement on the walls stop and hundreds of archers appear with their bows drawn taught aimed directly at you\n")
            delay_print("One of the archers, who you assume to be the captain, speaks out 'You shouldn't be here, you will pay for breaking the law'\n")
            delay_print("A single archer looses his arrow, you raise your hand to try and stop it, but suddenly it sprouts from your leg\n")
            delay_print("You feel your muscles quickly lock up and the world goes dark\n")
            startoverAction(answer)
        if "bracers" in state["inventory"]:
            delay_print("As you start to move, you see movement on the walls surrounding the courtyard\n")
            delay_print("Suddenly the movement on the walls stop and hundreds of archers appear with their bows drawn taught aimed directly at you\n")
            delay_print("One of the archers, who you assume to be the captain, speaks out 'You shouldn't be here, you will pay for breaking the law'\n")
            delay_print("A single archer looses his arrow, you raise your hand to try and stop it, Suddenly what looks like a blue curtain appears in front of you\n")
            delay_print("The arrow stops midair, caught by this new curtain.  The captain shouts the command to fire and you see hundreds of arrows appear stopped in a simliar manner to the first arrow\n")
            delay_print("The bracers start to glow a bright blue and suddenly all of the arrows are returned at high speed back to the archer that fired it and you hear the bodies thudding to the ground\n")
            delay_print("You feel worn out suddenly but wearily make your way to the gate")
            state["location"] = "courtyard2"
            state["prompt"] = "What would you like to do now?"
            state["allowed_resps"] = ["Open the gate", "rest", "go to door", "go to wagon"]
    if answer == "door":
        delay_print("As you start to move, you see movement on the walls surrounding the courtyard\n")
        delay_print("Suddenly the movement on the walls stop and hundreds of archers appear with their bows drawn taught aimed directly at you\n")
        delay_print("One of the archers, who you assume to be the captain, speaks out 'You shouldn't be here, you will pay for breaking the law'\n")
        if "bracers" not in state["inventory"]:
            dieroll = random.randint(1,20) - 4
            cprint(dieroll, "blue")
            if dieroll <= 12:
                delay_print("You start sprinting towards the door and manage to open it and get inside as you hear two thuds of an arrow embed in the door\n")
                delay_print("You look around and realise somehow you are back in the original room and the door you just came through magically vanished again\n")
                state["location"] = "darkroom"
                state["prompt"] = "What would you like to do?"
                state["allowed_resps"] = ["Window", "explore", "chest", "pile of clothes"]
            if dieroll > 12:
                delay_print("You start sprinting towards the door but suddenly an agonizing pain runs up your leg, you look down to see an arrow in your calf\n")
                delay_print("You feel your muscles quickly lock up and the world goes dark\n")
                startoverAction(answer)
        if "bracers" in state["inventory"]:
            dieroll = random.randint(1,20) + 4
            cprint(dieroll, "blue")
            if dieroll <= 14:
                delay_print("You start sprinting towards the door and manage to open it and get inside as you hear two thuds of an arrow embed in the door\n")
                delay_print("You look around and realise somehow you are back in the original room and the door you just came through magically vanished again\n")
                state["location"] = "darkroom2"
                state["prompt"] = "What would you like to do?"
                state["allowed_resps"] = ["Window", "explore", "chest", "pile of clothes"]
            if dieroll > 14:
                delay_print("You start sprinting towards the door but suddenly an agonizing pain runs up your leg, you look down to see an arrow in your calf\n")
                delay_print("You feel your muscles quickly lock up and the world goes dark\n")
                startoverAction(answer)





def atwindowAction(answer):
    if answer == "break it":
        dieroll = random.randint(1,20)
        cprint(dieroll, "blue")
        if dieroll >= 16:
            delay_print("The window breaks and you fall out into an empty courtyard\n")
            delay_print("You look around and see a wagon, a gate, and a door back into the building you just fell out of \n")
            state["health"] = state["health"] - 10
            state["location"] = "courtyard"
            state["prompt"] = "Do you check the wagon, go to the gate, or check the door "
            state["allowed_resps"] = ["wagon","gate","door"]
        else:
            delay_print("You hear the window crack a bit. ")
    elif answer == "open door":
        dieroll = random.randint(1,20)
        cprint(dieroll, "blue")
        if dieroll >= 14:
            delay_print("You have sucessfully opened the door!\n")
            delay_print("You step out of the room onto a landing with a staircase going up, and one going down \n")
            state["location"] = "landing"
            state["prompt"] = "Do you go up or down the stairs? "
            state["allowed_resps"] = ["up","down"]
        else:
            delay_print("The door is wedged but you feel it give a bit\n")

def vialAction(answer):
    if answer == "yes":
        print("You become drowsy and stumble around falling into bed and the world goes black\n")
        startoverAction(answer)
    elif answer == "no":
            delay_print("You put the vial in your pocket to save it for later\n")
            if "mystery vial" not in state["inventory"]:
                state["inventory"].append("mystery vial")
                cprint(f"Inventory:{state['inventory']}", "green")
            delay_print("You now need to decide what to do. \n")
            state["location"] = "darkroom"
            state["prompt"] = "Do you go to the window or check the pile of clothes "
            state["allowed_resps"] = ["window","pile of clothes"]


def action(answer):
    if answer == "inv":
        cprint(f"Inventory:{state['inventory']}", "green")
    if answer == "health":
        cprint(f"HP:{state['health']}", "red")
    if state["location"] == "darkroom":
        darkroomAction(answer)
    elif state["location"] == "darkroom2":
        darkroom2Action(answer)
    elif state["location"] == "walkingroom":
        opendoorAction(answer)
    elif state["location"] =="atwindow":
        atwindowAction(answer)
    elif state["location"] == "roomwithvial":
        vialAction(answer)
    elif state["location"] == "landing":
        landingAction(answer)
    elif state["location"] == "triplehall":
        triplehallAction(answer)
    elif state["location"] == "losthall":
        losthallAction(answer)
    elif state["location"] == "courtyard":
        courtyardAction(answer)
    elif state["location"] == "threedoor":
        threedoorAction(answer)
    elif state["location"] == "firstroom":
        firstroomAction(answer)
    elif state["location"] == "secondroom":
        secondroomAction(answer)
    elif state["location"] == "thirdroom":
        thirdroomAction(answer)
    elif state["location"] == "emptyroom":
        emptyroomAction(answer)

    else:
        raise NotImplementedError() 


state = {
    "location": "darkroom",
    "prompt": None,
    "allowed_resps": None,
    "inventory": [],
    "knowledge": [],
    "always_resps": ["inv", "health"],
    "health": 30,
    "armor": 8, 
}

delay_print("You are about to play my game, at any time you are prompted you can check your health or your inventory with the words health or inv\n")
delay_print("Good luck and may the odds be in your favor\n")



delay_print("You awake in a dark room, You don't remember where you are or how you got there.\n")
delay_print("You look around and see a pile of clothes, a chest, and a window.\n")

state["prompt"] = "Do you check the pile of clothes, the chest, the window? "
state["allowed_resps"] = ["pile of clothes", "chest", "window"]

# Forever: ask the user for input
while True:
    answer = inputFromList(
        state["prompt"],
        state["allowed_resps"] + state["always_resps"]
    )
    action(answer)
